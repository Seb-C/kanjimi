version: '3.8'

services:
  database:
    image: postgres:12
    restart: on-failure
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test
    ports:
      - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data
  watch:
    image: node:14-alpine
    restart: on-failure
    working_dir: /kanjimi
    command: ./node_modules/.bin/tsc --watch -p ./src/Server/tsconfig.json
    volumes:
      - $PWD:/kanjimi
  server:
    build:
      context: .
      dockerfile: ./dist/docker/server.Dockerfile
      args:
        - NODE_ENV=development
        - KANJIMI_API_URL=https://localhost/api
        - KANJIMI_WWW_URL=https://localhost
    restart: on-failure
    depends_on:
      - database
      - watch
    environment:
      - KANJIMI_DATABASE_HOST=database
      - KANJIMI_DATABASE_PORT=5432
      - KANJIMI_DATABASE_DATABASE=test
      - KANJIMI_DATABASE_USER=test
      - KANJIMI_DATABASE_PASSWORD=test
      - KANJIMI_DATABASE_USE_SSL=false
      - KANJIMI_SMTP_HOST=smtp
      - KANJIMI_SMTP_PORT=25
      - KANJIMI_SMTP_SECURE=false
    env_file:
      - docker-compose.env
    user: root
    command: ./node_modules/.bin/nodemon -w ./dist/server --expose-gc dist/server/Server/server.js
    volumes:
      - $PWD:/kanjimi
      - mails:/tmp/mails
  nginx:
    build:
      context: .
      dockerfile: ./dist/docker/nginx.Dockerfile
      args:
        - KANJIMI_NGINX_REMOVE_TEST_PAGES=false
        - KANJIMI_NGINX_CERTIFICATE_DOMAIN=localhost
        - KANJIMI_API_URL=https://localhost/api
        - KANJIMI_WWW_URL=https://localhost
    restart: on-failure
    environment:
      - KANJIMI_NGINX_UPSTREAM=server:3000
      - KANJIMI_NGINX_DOMAIN=localhost
      - KANJIMI_NGINX_CACHE_DURATION=0
      - KANJIMI_NGINX_COMMENT_TEST_PAGES=
      - KANJIMI_NGINX_COMMENT_FORCE_DOMAIN=#
    depends_on:
      - server
    volumes:
      - $PWD/www:/kanjimi/www
    ports:
      - "80:80"
      - "443:443"
  extension:
    image: node:14-alpine
    restart: on-failure
    working_dir: /kanjimi
    environment:
      - KANJIMI_EXTENSION_HOST=localhost
    env_file:
      - docker-compose.env
    command: >
      sh -c "
        ./node_modules/.bin/webpack --color --config=src/Extension/webpack.config.js --build;
        ./node_modules/.bin/webpack --color --config=src/Extension/webpack.config.js --watch
      "
    healthcheck:
      test: cat ./dist/extension/content.build.js
      interval: 3s
      timeout: 1s
      retries: 3
      start_period: 30s
    volumes:
      - $PWD:/kanjimi
  webapp:
    image: node:14-alpine
    restart: on-failure
    working_dir: /kanjimi
    env_file:
      - docker-compose.env
    command: >
      sh -c "
        ./node_modules/.bin/webpack --color --config=src/WebApp/webpack.config.js --build;
        ./node_modules/.bin/webpack --color --config=src/WebApp/webpack.config.js --watch
      "
    healthcheck:
      test: cat ./www/js/app.build.js
      interval: 3s
      timeout: 1s
      retries: 3
      start_period: 30s
    volumes:
      - $PWD:/kanjimi
  smtp:
    image: hmlio/spamsink
    restart: on-failure
    environment:
      - SINK_PORT=25
      - SINK_HOSTNAME=smtp
    volumes:
      - mails:/opt/spamsink/mails
volumes:
  database:
  mails:
